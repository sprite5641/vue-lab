{"ast":null,"code":"import { createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nvar _hoisted_1 = {\n  id: \"map-canvas\",\n  class: \"relative w-full rounded h-600-px\",\n  \"data-lat\": \"40.748817\",\n  \"data-lng\": \"-73.985428\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createBlock(\"div\", _hoisted_1);\n}","map":{"version":3,"sources":["C:\\Users\\Sprite-PC\\OneDrive\\เดสก์ท็อป\\vue-notus\\src\\components\\Maps\\MapExample.vue"],"names":[],"mappings":";;AAEI,EAAA,EAAE,EAAC,Y;AACH,EAAA,KAAK,EAAC,kC;AACN,cAAS,W;AACT,cAAS;;;uBAJX,YAAA,CAKO,KALP,EAAA,UAAA,C","sourcesContent":["<template>\r\n  <div\r\n    id=\"map-canvas\"\r\n    class=\"relative w-full rounded h-600-px\"\r\n    data-lat=\"40.748817\"\r\n    data-lng=\"-73.985428\"\r\n  ></div>\r\n</template>\r\n<script>\r\nexport default {\r\n  mounted() {\r\n    let google = window.google;\r\n    let map = document.getElementById(\"map-canvas\");\r\n    let lat = map.getAttribute(\"data-lat\");\r\n    let lng = map.getAttribute(\"data-lng\");\r\n\r\n    const myLatlng = new google.maps.LatLng(lat, lng);\r\n    const mapOptions = {\r\n      zoom: 12,\r\n      scrollwheel: false,\r\n      center: myLatlng,\r\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n      styles: [\r\n        {\r\n          featureType: \"administrative\",\r\n          elementType: \"labels.text.fill\",\r\n          stylers: [{ color: \"#444444\" }],\r\n        },\r\n        {\r\n          featureType: \"landscape\",\r\n          elementType: \"all\",\r\n          stylers: [{ color: \"#f2f2f2\" }],\r\n        },\r\n        {\r\n          featureType: \"poi\",\r\n          elementType: \"all\",\r\n          stylers: [{ visibility: \"off\" }],\r\n        },\r\n        {\r\n          featureType: \"road\",\r\n          elementType: \"all\",\r\n          stylers: [{ saturation: -100 }, { lightness: 45 }],\r\n        },\r\n        {\r\n          featureType: \"road.highway\",\r\n          elementType: \"all\",\r\n          stylers: [{ visibility: \"simplified\" }],\r\n        },\r\n        {\r\n          featureType: \"road.arterial\",\r\n          elementType: \"labels.icon\",\r\n          stylers: [{ visibility: \"off\" }],\r\n        },\r\n        {\r\n          featureType: \"transit\",\r\n          elementType: \"all\",\r\n          stylers: [{ visibility: \"off\" }],\r\n        },\r\n        {\r\n          featureType: \"water\",\r\n          elementType: \"all\",\r\n          stylers: [{ color: \"#5e72e4\" }, { visibility: \"on\" }],\r\n        },\r\n      ],\r\n    };\r\n\r\n    map = new google.maps.Map(map, mapOptions);\r\n\r\n    const marker = new google.maps.Marker({\r\n      position: myLatlng,\r\n      map: map,\r\n      animation: google.maps.Animation.DROP,\r\n      title: \"Hello World!\",\r\n    });\r\n\r\n    const contentString =\r\n      '<div class=\"info-window-content\"><h2>Vue Notus</h2>' +\r\n      \"<p>A beautiful UI Kit and Admin for Tailwind CSS. It is Free and Open Source.</p></div>\";\r\n\r\n    const infowindow = new google.maps.InfoWindow({\r\n      content: contentString,\r\n    });\r\n\r\n    google.maps.event.addListener(marker, \"click\", function () {\r\n      infowindow.open(map, marker);\r\n    });\r\n  },\r\n};\r\n</script>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}