{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Sprite-PC/OneDrive/\\u0E40\\u0E14\\u0E2A\\u0E01\\u0E4C\\u0E17\\u0E47\\u0E2D\\u0E1B/vue-notus/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport \"regenerator-runtime/runtime.js\";\nimport Axios from 'axios'; // import { createStore } from 'vuex';\n// import {adminLogin} from '@/api/admin.js'\n// import auth from './modules/auth/index.js'\n\nvar store = createStore({\n  // modules: {\n  //     auth: auth\n  // },\n  state: function state() {\n    return {\n      isLoggedIn: false\n    };\n  },\n  mutations: {\n    isLoggedIn: true\n  },\n  actions: {\n    login: function login(_ref, admin) {\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var commit, response, token, _admin;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                commit = _ref.commit;\n                _context.next = 3;\n                return Axios.post(adminLogin, admin);\n\n              case 3:\n                response = _context.sent;\n\n                if (response.data.success) {\n                  token = response.data.token;\n                  _admin = response.data.admin;\n                  localStorage.setItem('token', token); // Axios.defaults.headers.common['Authorization'] = token\n\n                  commit('auth_success', token, _admin);\n                } else {\n                  localStorage.removeItem('token');\n                  commit('auth_error');\n                }\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    }\n  }\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/Sprite-PC/OneDrive/เดสก์ท็อป/vue-notus/src/store/index.js"],"names":["Axios","store","createStore","state","isLoggedIn","mutations","actions","login","admin","commit","post","adminLogin","response","data","success","token","localStorage","setItem","removeItem"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;AAEA;;AAEA,IAAMC,KAAK,GAAIC,WAAW,CAAC;AACvB;AACA;AACA;AACAC,EAAAA,KAJuB,mBAIf;AACJ,WAAO;AACLC,MAAAA,UAAU,EAAE;AADP,KAAP;AAGD,GARoB;AASrBC,EAAAA,SAAS,EAAE;AACTD,IAAAA,UAAU,EAAG;AADJ,GATU;AAYrBE,EAAAA,OAAO,EAAE;AACDC,IAAAA,KADC,uBACeC,KADf,EACqB;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAfC,gBAAAA,MAAe,QAAfA,MAAe;AAAA;AAAA,uBAEHT,KAAK,CAACU,IAAN,CAAWC,UAAX,EAAsBH,KAAtB,CAFG;;AAAA;AAEpBI,gBAAAA,QAFoB;;AAI1B,oBAAGA,QAAQ,CAACC,IAAT,CAAcC,OAAjB,EAAyB;AAEjBC,kBAAAA,KAFiB,GAETH,QAAQ,CAACC,IAAT,CAAcE,KAFL;AAGbP,kBAAAA,MAHa,GAGLI,QAAQ,CAACC,IAAT,CAAcL,KAHT;AAInBQ,kBAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,KAA9B,EAJmB,CAKnB;;AACAN,kBAAAA,MAAM,CAAC,cAAD,EAAiBM,KAAjB,EAAwBP,MAAxB,CAAN;AAEL,iBARD,MAQO;AACLQ,kBAAAA,YAAY,CAACE,UAAb,CAAwB,OAAxB;AACAT,kBAAAA,MAAM,CAAC,YAAD,CAAN;AACD;;AAfyB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB3B;AAjBM;AAZY,CAAD,CAA1B;AAiCA,eAAeR,KAAf","sourcesContent":["import Axios from 'axios';\r\n// import { createStore } from 'vuex';\r\n// import {adminLogin} from '@/api/admin.js'\r\n\r\n// import auth from './modules/auth/index.js'\r\n\r\nconst store =  createStore({\r\n    // modules: {\r\n    //     auth: auth\r\n    // },\r\n    state() {\r\n        return {\r\n          isLoggedIn: false\r\n        };\r\n      },\r\n      mutations: {\r\n        isLoggedIn:  true\r\n      },\r\n      actions: {\r\n        async login({commit}, admin){\r\n          // commit('auth_request')\r\n          const response = await Axios.post(adminLogin,admin )\r\n  \r\n          if(response.data.success){\r\n\r\n            const token = response.data.token\r\n                const admin = response.data.admin\r\n                localStorage.setItem('token', token)\r\n                // Axios.defaults.headers.common['Authorization'] = token\r\n                commit('auth_success', token, admin)\r\n  \r\n          } else {\r\n            localStorage.removeItem('token')\r\n            commit('auth_error')\r\n          }\r\n        }\r\n      }\r\n    });\r\n\r\nexport default store;"]},"metadata":{},"sourceType":"module"}